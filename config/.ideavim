let mapleader=" "

Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'vim-scripts/argtextobj.vim'
Plug 'kana/vim-textobj-entire'

set showmode
set so=5
set incsearch
set nu
set visualbell
set clipboard=ideaput

set number
set relativenumber

set easymotion

map Q gq
map f <Plug>(easymotion-s)

map w [w
map e ]w
map b [b

map <leader>ad <Action>(Debug)
map <leader>as <Action>(Stop)

map <leader>ca <Action>(Annotate)
map <leader>cd <Action>(ShowErrorDescription)
map <leader>cb <Action>(BuildSolutionAction)

map <leader>fs <Action>(SelectInProjectView)
map <leader>fh <Action>(Vcs.ShowTabbedFileHistory)
map <leader>ff <Action>(GotoFile)
map <leader>fg <Action>(FindInPath)
map <leader>fb <Action>(Switcher)

map <leader>gs <Action>(FileStructurePopup)
map <leader>gi <Action>(GotoImplementation)
map <leader>gd <Action>(GotoDeclaration)
map <leader>gef <Action>(GotoNextError)
map <leader>ges <Action>(ReSharperGotoNextErrorInSolution)
map <leader>gu <Action>(FindUsages)

map <leader>tr <Action>(Rider.UnitTesting.RunSolution)
map <leader>tc <Action>(RiderUnitTestCoverSolutionAction)
map <leader>tq <Action>(Rider.UnitTesting.QuickList)

map <leader>po <Action>(ManageRecentProjects)
map <leader>pc <Action>(CloseProject)
map <leader>pco <Action>(CloseOtherProjects)

map <leader>vbl <Action>(Git.Branches)
map <leader>vbc <Action>(Git.CreateNewBranch)
map <leader>vu <Action>(Vcs.UpdateProject)

map <leader>rr <Action>(RenameElement)
map <leader>rl <Action>(ShowIntentionActions)
map <leader>rq <Action>(Refactorings.QuickListPopupAction)
map <leader>rf <Action>(ReformatCode)

map <leader>db <Action>(ToggleLineBreakpoint)
map <leader>dn <Action>(StepOver)
map <leader>di <Action>(SmartStepInto)
map <leader>do <Action>(StepOut)

map <leader>ez <Action>(ToggleDistractionFreeMode)
